}
# Series for Total Production of Investment Goods for Manufacturing
# missing: Luxembourg, Netherlands, Slovenia
nation_id <- c('DE', 'AT', 'BE', 'ES', 'FI', 'FR', 'IE', 'IT', 'PT', 'GR')
investment_symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
investment <- merge_fred_data(investment_symbols, nation_id)
plot(as.zoo(na.omit(investment)), main = "Total Production of Investment Goods for Manufacturing")
# Series for Harmonized Unemployment Rate: All Persons
# missing: Luxembourg, Netherlands, Slovenia, Portugal
nation_id2 <- c('DEU', 'AUT', 'BEL', 'ESP', 'FIN', 'FRA', 'IRL', 'ITA', 'GRC')
unemployment_symbols <- paste(nation_id2, 'URHARMQDSMEI', sep = '')
unemployment <- merge_fred_data(unemployment_symbols, nation_id2)
plot(as.zoo(na.omit(unemployment)), main = "Harmonized Unemployment Rate: All Persons")
get.env()
test <- new.env()
test
local_env <- new.env()
symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
getSymbols(symbols, src='FRED', env = local_env)
test
eval(symbols, env = test)
library('quantmod')
library('xts')
library('zoo')
rm(list=ls(all=TRUE))
# Utils
merge_xts_using_symbols <- function(symbols){
# names : vector of names strings for variables in the current envir
names <- sapply(symbols, FUN = as.name, simplify = TRUE)
data <- eval(names[[1]])
for (i in 2:length(names)){
data <- merge(data, eval(names[[i]]), fill = NA)
}
return(data)
}
merge_fred_data <- function(symbols, names){
local_env <- new.env()
getSymbols(symbols, src='FRED', env = local_env)
data <- merge_xts_using_symbols(eval(symbols, env = local_env))
names(data) <- names
rm(list=symbols, env = local_env)
return(data)
}
# Series for Total Production of Investment Goods for Manufacturing
# missing: Luxembourg, Netherlands, Slovenia
nation_id <- c('DE', 'AT', 'BE', 'ES', 'FI', 'FR', 'IE', 'IT', 'PT', 'GR')
investment_symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
investment <- merge_fred_data(investment_symbols, nation_id)
plot(as.zoo(na.omit(investment)), main = "Total Production of Investment Goods for Manufacturing")
# Series for Harmonized Unemployment Rate: All Persons
# missing: Luxembourg, Netherlands, Slovenia, Portugal
nation_id2 <- c('DEU', 'AUT', 'BEL', 'ESP', 'FIN', 'FRA', 'IRL', 'ITA', 'GRC')
unemployment_symbols <- paste(nation_id2, 'URHARMQDSMEI', sep = '')
unemployment <- merge_fred_data(unemployment_symbols, nation_id2)
plot(as.zoo(na.omit(unemployment)), main = "Harmonized Unemployment Rate: All Persons")
library('quantmod')
library('xts')
library('zoo')
rm(list=ls(all=TRUE))
# Utils
merge_xts_using_symbols <- function(symbols){
# names : vector of names strings for variables in the current envir
names <- sapply(symbols, FUN = as.name, simplify = TRUE)
data <- eval(names[[1]])
for (i in 2:length(names)){
data <- merge(data, eval(names[[i]]), fill = NA)
}
return(data)
}
merge_fred_data <- function(symbols, names){
local_env <- new.env()
getSymbols(symbols, src='FRED', env = local_env)
data <- merge_xts_using_symbols(eval(symbols, env = local_env))
#names(data) <- names
#rm(list=symbols, env = local_env)
return(data)
}
# Series for Total Production of Investment Goods for Manufacturing
# missing: Luxembourg, Netherlands, Slovenia
nation_id <- c('DE', 'AT', 'BE', 'ES', 'FI', 'FR', 'IE', 'IT', 'PT', 'GR')
investment_symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
investment <- merge_fred_data(investment_symbols, nation_id)
plot(as.zoo(na.omit(investment)), main = "Total Production of Investment Goods for Manufacturing")
# Series for Harmonized Unemployment Rate: All Persons
# missing: Luxembourg, Netherlands, Slovenia, Portugal
nation_id2 <- c('DEU', 'AUT', 'BEL', 'ESP', 'FIN', 'FRA', 'IRL', 'ITA', 'GRC')
unemployment_symbols <- paste(nation_id2, 'URHARMQDSMEI', sep = '')
unemployment <- merge_fred_data(unemployment_symbols, nation_id2)
plot(as.zoo(na.omit(unemployment)), main = "Harmonized Unemployment Rate: All Persons")
library('quantmod')
library('xts')
library('zoo')
rm(list=ls(all=TRUE))
# Utils
merge_xts_using_symbols <- function(symbols){
# names : vector of names strings for variables in the current envir
names <- sapply(symbols, FUN = as.name, simplify = TRUE)
data <- eval(names[[1]])
for (i in 2:length(names)){
data <- merge(data, eval(names[[i]]), fill = NA)
}
return(data)
}
merge_fred_data <- function(symbols, names){
getSymbols(symbols, src='FRED', env = globalenv())
data <- merge_xts_using_symbols(symbols)
names(data) <- names
rm(list=symbols)
return(data)
}
# Series for Total Production of Investment Goods for Manufacturing
# missing: Luxembourg, Netherlands, Slovenia
nation_id <- c('DE', 'AT', 'BE', 'ES', 'FI', 'FR', 'IE', 'IT', 'PT', 'GR')
investment_symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
investment <- merge_fred_data(investment_symbols, nation_id)
plot(as.zoo(na.omit(investment)), main = "Total Production of Investment Goods for Manufacturing")
# Series for Harmonized Unemployment Rate: All Persons
# missing: Luxembourg, Netherlands, Slovenia, Portugal
nation_id2 <- c('DEU', 'AUT', 'BEL', 'ESP', 'FIN', 'FRA', 'IRL', 'ITA', 'GRC')
unemployment_symbols <- paste(nation_id2, 'URHARMQDSMEI', sep = '')
unemployment <- merge_fred_data(unemployment_symbols, nation_id2)
plot(as.zoo(na.omit(unemployment)), main = "Harmonized Unemployment Rate: All Persons")
library('quantmod')
library('xts')
library('zoo')
rm(list=ls(all=TRUE))
# Utils
merge_xts_using_symbols <- function(symbols){
# names : vector of names strings for variables in the current envir
names <- sapply(symbols, FUN = as.name, simplify = TRUE)
data <- eval(names[[1]])
for (i in 2:length(names)){
data <- merge(data, eval(names[[i]]), fill = NA)
}
return(data)
}
merge_fred_data <- function(symbols, names){
getSymbols(symbols, src='FRED', env = globalenv())
data <- merge_xts_using_symbols(symbols)
names(data) <- names
rm(list=symbols, env = globalenv())
return(data)
}
# Series for Total Production of Investment Goods for Manufacturing
# missing: Luxembourg, Netherlands, Slovenia
nation_id <- c('DE', 'AT', 'BE', 'ES', 'FI', 'FR', 'IE', 'IT', 'PT', 'GR')
investment_symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
investment <- merge_fred_data(investment_symbols, nation_id)
plot(as.zoo(na.omit(investment)), main = "Total Production of Investment Goods for Manufacturing")
# Series for Harmonized Unemployment Rate: All Persons
# missing: Luxembourg, Netherlands, Slovenia, Portugal
nation_id2 <- c('DEU', 'AUT', 'BEL', 'ESP', 'FIN', 'FRA', 'IRL', 'ITA', 'GRC')
unemployment_symbols <- paste(nation_id2, 'URHARMQDSMEI', sep = '')
unemployment <- merge_fred_data(unemployment_symbols, nation_id2)
plot(as.zoo(na.omit(unemployment)), main = "Harmonized Unemployment Rate: All Persons")
rm(list=symbols, env = globalenv())
symbols
symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
rm(list=symbols, env = globalenv())
symbols
library('quantmod')
library('xts')
library('zoo')
rm(list=ls(all=TRUE))
# Utils
merge_xts_using_symbols <- function(symbols){
# names : vector of names strings for variables in the current envir
names <- sapply(symbols, FUN = as.name, simplify = TRUE)
data <- eval(names[[1]])
for (i in 2:length(names)){
data <- merge(data, eval(names[[i]]), fill = NA)
}
return(data)
}
merge_fred_data <- function(symbols, names){
getSymbols(symbols, src='FRED', env = globalenv())
symbols_as_names <- sapply(symbols, FUN = as.name, simplify = TRUE)
data <- merge_xts_using_symbols(symbols)
names(data) <- names
rm(list = symbols_as_names, env = globalenv())
return(data)
}
# Series for Total Production of Investment Goods for Manufacturing
# missing: Luxembourg, Netherlands, Slovenia
nation_id <- c('DE', 'AT', 'BE', 'ES', 'FI', 'FR', 'IE', 'IT', 'PT', 'GR')
investment_symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
investment <- merge_fred_data(investment_symbols, nation_id)
plot(as.zoo(na.omit(investment)), main = "Total Production of Investment Goods for Manufacturing")
# Series for Harmonized Unemployment Rate: All Persons
# missing: Luxembourg, Netherlands, Slovenia, Portugal
nation_id2 <- c('DEU', 'AUT', 'BEL', 'ESP', 'FIN', 'FRA', 'IRL', 'ITA', 'GRC')
unemployment_symbols <- paste(nation_id2, 'URHARMQDSMEI', sep = '')
unemployment <- merge_fred_data(unemployment_symbols, nation_id2)
plot(as.zoo(na.omit(unemployment)), main = "Harmonized Unemployment Rate: All Persons")
symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
symbols_as_names <- sapply(symbols, FUN = as.name, simplify = TRUE)
rm(list = symbols_as_names, env = globalenv())
symbols_as_names
typeof(symbols_as_names)
ls()
names
symbols
rm(list = symbols, env = globalenv())
rm(list = symbols)
library('quantmod')
library('xts')
library('zoo')
rm(list=ls(all=TRUE))
# Utils
merge_xts_using_symbols <- function(symbols){
# names : vector of names strings for variables in the current envir
names <- sapply(symbols, FUN = as.name, simplify = TRUE)
data <- eval(names[[1]])
for (i in 2:length(names)){
data <- merge(data, eval(names[[i]]), fill = NA)
}
return(data)
}
merge_fred_data <- function(symbols, names){
getSymbols(symbols, src='FRED', env = globalenv())
data <- merge_xts_using_symbols(symbols)
names(data) <- names
rm(list = symbols, envir = globalenv())
return(data)
}
# Series for Total Production of Investment Goods for Manufacturing
# missing: Luxembourg, Netherlands, Slovenia
nation_id <- c('DE', 'AT', 'BE', 'ES', 'FI', 'FR', 'IE', 'IT', 'PT', 'GR')
investment_symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
investment <- merge_fred_data(investment_symbols, nation_id)
plot(as.zoo(na.omit(investment)), main = "Total Production of Investment Goods for Manufacturing")
# Series for Harmonized Unemployment Rate: All Persons
# missing: Luxembourg, Netherlands, Slovenia, Portugal
nation_id2 <- c('DEU', 'AUT', 'BEL', 'ESP', 'FIN', 'FRA', 'IRL', 'ITA', 'GRC')
unemployment_symbols <- paste(nation_id2, 'URHARMQDSMEI', sep = '')
unemployment <- merge_fred_data(unemployment_symbols, nation_id2)
plot(as.zoo(na.omit(unemployment)), main = "Harmonized Unemployment Rate: All Persons")
symbols_cpi <- paste(nation_id2, 'CPIALLQINMEI', sep = '')
unemployment <- merge_fred_data(symbols_cpi, nation_id2)
plot(as.zoo(na.omit(unemployment)), main = "Consumer Price Index of All Items")
library('quantmod')
library('xts')
library('zoo')
rm(list=ls(all=TRUE))
# Utils
merge_xts_using_symbols <- function(symbols){
# names : vector of names strings for variables in the current envir
names <- sapply(symbols, FUN = as.name, simplify = TRUE)
data <- eval(names[[1]])
for (i in 2:length(names)){
data <- merge(data, eval(names[[i]]), fill = NA)
}
return(data)
}
merge_fred_data <- function(symbols, names){
getSymbols(symbols, src='FRED', env = globalenv())
data <- merge_xts_using_symbols(symbols)
names(data) <- names
rm(list = symbols, envir = globalenv())
return(data)
}
# Series for Total Production of Investment Goods for Manufacturing
# missing: Luxembourg, Netherlands, Slovenia
nation_id <- c('DE', 'AT', 'BE', 'ES', 'FI', 'FR', 'IE', 'IT', 'PT', 'GR')
investment_symbols <- paste('PRMNVG01', nation_id, 'Q661N', sep = '')
investment <- merge_fred_data(investment_symbols, nation_id)
plot(as.zoo(na.omit(investment)), main = "Total Production of Investment Goods for Manufacturing")
# Series for Harmonized Unemployment Rate: All Persons
# missing: Luxembourg, Netherlands, Slovenia, Portugal
nation_id2 <- c('DEU', 'AUT', 'BEL', 'ESP', 'FIN', 'FRA', 'IRL', 'ITA', 'GRC')
symbols_unemployement <- paste(nation_id2, 'URHARMQDSMEI', sep = '')
unemployment <- merge_fred_data(symbols_unemployement, nation_id2)
plot(as.zoo(na.omit(unemployment)), main = "Harmonized Unemployment Rate: All Persons")
# Series for Consumer Price Index of All Items
symbols_cpi <- paste(nation_id2, 'CPIALLQINMEI', sep = '')
cpi <- merge_fred_data(symbols_cpi, nation_id2)
plot(as.zoo(na.omit(cpi)), main = "Consumer Price Index of All Items")
describe(na.omit(cpi))
summary(na.omit(cpi))
head(cpi)
diff(cpi)
plot(as.zoo(diff(na.omit(cpi))), main = "Consumer Price Index of All Items")
library('devtools')
devtools::install_github(jcizel/FredR)
devtools::install_github(repo = jcizel/FredR)
devtools::install_github(repo = "jcizel/FredR")
library(FredR)
api.key = '2771cdf821cf9d0db220e22f8617b190'
fred <- FredR(api.key)
str(fred,1)
gdp.series <- fred$series.search("GDP")
gdp.series <- fred$series.search("GDP")
fred$series.search
gdp.series <- fred$series.search()
gdp.series <- fred$series.search("gdp")
gdp <- fred$series.observations(series_id = 'GDPC1')
# install FredR Package
#library('devtools')
#devtools::install_github(repo = "jcizel/FredR")
library(FredR)
api.key = '2771cdf821cf9d0db220e22f8617b190'
fred <- FredR(api.key)
str(fred,1)
gdp.series <- fred$series.search("gdp")
library(pipeR)
library(dplyr)
gdp.series %>>%
select(
id,
title,
observation_start,
observation_end,
popularity
) %>>%
arrange(
desc(as.numeric(popularity))
)
gdp <- fred$series.observations(series_id = 'GDPC1')
fred
str(fred,1)
gdp <- fred$series.search.tags(series_search_text = 'cpi')
api.key = '2771cdf821cf9d0db220e22f8617b190'
fred <- FredR(api.key)
str(fred,1)
gdp.series <- fred$series.search("gdp")
fred$series.search
query = "fred/series/search"
l <- getURL(url = sprintf("%s/%s?search_text=%s&search_type=%s&order_by=%s&limit=%s&api_key=%s",
root, query, 'GDP', search_type, order_by, limit, api.key) %>>%
URLencode) %>>% xmlTreeParse(useInternalNodes = TRUE)
library(RCurl)
query = "fred/series/search"
l <- getURL(url = sprintf("%s/%s?search_text=%s&search_type=%s&order_by=%s&limit=%s&api_key=%s",
root, query, 'GDP', search_type, order_by, limit, api.key) %>>%
URLencode) %>>% xmlTreeParse(useInternalNodes = TRUE)
gdp <- fred$series.search.tags(series_search_text = 'cpi')
library(FredR)
library(RCurl)
api.key = '2771cdf821cf9d0db220e22f8617b190'
fred <- FredR(api.key)
str(fred,1)
gdp.series <- fred$series.search("gdp")
library(pipeR)
library(dplyr)
gdp.series <- fred$series.search("gdp")
gdp.series <- fred$series.search("gdp")
library(FredR)
library(RCurl)
api.key = '2771cdf821cf9d0db220e22f8617b190'
fred <- FredR(api.key)
str(fred,1)
gdp.series <- fred$series.search("gdp")
gdp.series <- fred$series.search(text = "gdp")
library(FredR)
gdp.series <- fred$series.search(text = "gdp")
fred
gdp.series <- fred$series.search(text = "gdp")
nation_id2 <- c('DEU', 'AUT', 'BEL', 'ESP', 'FIN', 'FRA', 'IRL', 'ITA', 'GRC')
symbols_unemployement <- paste(nation_id2, 'URHARMQDSMEI', sep = '')
symbols_unemployement
fred$series.search("DEUURHARMQDSMEI")
library(XML)
gdp.series <- fred$series.search(text = "gdp")
xml2dt
fred
freR()
FredR()
api.key = 'c3bc005d1a70992b2b3f3ef97d896c32'
fred <- FredR(api.key)
str(fred,1)
gdp.series <- fred$series.search(text = "gdp")
library(FredR)
library(RCurl)
library(pipeR)
library(dplyr)
library(XML)
api.key = 'c3bc005d1a70992b2b3f3ef97d896c32'
fred <- FredR(api.key)
str(fred,1)
gdp.series <- fred$series.search(text = "gdp")
test <- fred$series.search
test
test(text = "gdp")
library('devtools')
devtools::install_github(repo = "jcizel/FredR")
api.key = 'c3bc005d1a70992b2b3f3ef97d896c32'
fred <- FredR(api.key)
str(fred,1)
test <- fred$series.search
test(text = "gdp")
test(text = "gdp")
api.key = ' c3bc005d1a70992b2b3f3ef97d896c32 '
fred <- FredR(api.key)
str(fred,1)
test <- fred$series.search
test(text = "gdp")
api.key = 'c3bc005d1a70992b2b3f3ef97d896c32'
fred <- FredR(api.key)
str(fred,1)
test <- fred$series.search
test(text = "gdp")
test
api.key = "c3bc005d1a70992b2b3f3ef97d896c32"
fred <- FredR(api.key)
str(fred,1)
test <- fred$series.search
test
test(text = "Industries", search_type = "full_text")
test(text = "total", search_type = "series_id")
gdp.series <- fred$series.search(text = "gdp")
test(text = "total", search_type = "series_id", order_by = "series_id")
install.packages(c("boot", "car", "class", "cluster", "codetools", "colorspace", "forecast", "foreign", "Formula", "gmm", "gplots", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "miscFuncs", "nlme", "nnet", "qvcalc", "Rcpp", "RcppArmadillo", "relimp", "RODBC", "rpart", "Rttf2pt1", "spatial", "survival", "tikzDevice", "timeDate", "timeSeries", "tseries"))
install.packages(c("boot", "car", "class", "cluster", "codetools",
)
)
install.packages(c("boot", "car", "class", "cluster", "codetools", "colorspace", "forecast", "foreign", "Formula", "gmm", "gplots", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "miscFuncs", "nlme", "nnet", "qvcalc", "Rcpp", "RcppArmadillo", "relimp", "RODBC", "rpart", "Rttf2pt1", "spatial", "survival", "tikzDevice", "timeDate", "timeSeries", "tseries"))
install.packages(c("boot", "car", "class", "cluster", "codetools",
)
install.packages(c("boot", "car", "class", "cluster", "codetools", "colorspace", "forecast", "foreign", "Formula", "gmm", "gplots", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "miscFuncs", "nlme", "nnet", "qvcalc", "Rcpp", "RcppArmadillo", "relimp", "RODBC", "rpart", "Rttf2pt1", "spatial", "survival", "tikzDevice", "timeDate", "timeSeries", "tseries"))
install.packages(c("boot", "car", "class", "cluster", "codetools", "colorspace", "forecast", "foreign", "Formula", "gmm", "gplots", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "miscFuncs", "nlme", "nnet", "qvcalc", "Rcpp", "RcppArmadillo", "relimp", "RODBC", "rpart", "Rttf2pt1", "spatial", "survival", "tikzDevice", "timeDate", "timeSeries", "tseries")
)
))
library(FredR)
library(RCurl)
library(FredR)
library(pipeR)
#library(dplyr)
library(XML)
api.key = "c3bc005d1a70992b2b3f3ef97d896c32"
fred <- FredR(api.key)
str(fred,1)
test <- fred$series.search
test
test(text = "total", search_type = "series_id", order_by = "series_id")
gdp.series <- fred$series.search(text = "gdp")
root
sprintf("%s/%s?search_text=%s&search_type=%s&order_by=%s&limit=%s&api_key=%s", root, query, text, search_type, order_by, limit, api.key)
root = ""
sprintf("%s/%s?search_text=%s&search_type=%s&order_by=%s&limit=%s&api_key=%s", root, query, text, search_type, order_by, limit, api.key)
text = "gdp"
search_type = "full_text"
order_by = "popularity"
limit = 100
query = "fred/series/search"
root = ""
sprintf("%s/%s?search_text=%s&search_type=%s&order_by=%s&limit=%s&api_key=%s", root, query, text, search_type, order_by, limit, api.key)
l <- getURL(url = test)
test  <- sprintf("%s/%s?search_text=%s&search_type=%s&order_by=%s&limit=%s&api_key=%s", root, query, text, search_type, order_by, limit, api.key)
l <- getURL(url = test)
root = "/"
test  <- sprintf("%s/%s?search_text=%s&search_type=%s&order_by=%s&limit=%s&api_key=%s", root, query, text, search_type, order_by, limit, api.key)
l <- getURL(url = test)
l <- getURL(url = test%>>% URLencode) %>>% xmlTreeParse(useInternalNodes = TRUE)
test
text = "gdp"
search_type = "full_text"
order_by = "popularity"
limit = 100
query = "fred/series/search"
root = "http://api.stlouisfed.org/"
test  <- sprintf("%s/%s?search_text=%s&search_type=%s&order_by=%s&limit=%s&api_key=%s", root, query, text, search_type, order_by, limit, api.key)
test
l <- getURL(url = test%>>% URLencode)
l
l <- getURL(url = test%>>% URLencode) %>>% xmlTreeParse(useInternalNodes = TRUE)
l
fred$series.search
xml2dt(l)
xml2dt
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
gdp.series <- fred$series.search(text = "gdp")
xml2dt <- function(xmlObj){
xmlApply(xmlRoot(xmlObj), xmlAttrs) %>>%
list.map(. %>>% as.list %>>% as.data.table) %>>%
rbindlist(fill = TRUE) ->
dt
return(dt)
}
xml2dt(l)
xml2dt <- function(xmlObj){
xmlApply(xmlRoot(xmlObj), xmlAttrs) %>>%
list.map(. %>>% as.list %>>% as.data.table) %>>%
rbindlist() ->
dt
return(dt)
}
xml2dt(l)
source(test.R)
source("test.R")
getwd()
setwd("/Users/nicolassaleille/Dropbox/ofpr/scripts/scripts_fred") # chemin perso
source("test.R")
FredR
setwd("/Users/nicolassaleille/Dropbox/ofpr/scripts/scripts_fred") # chemin perso
source("test.R")
api.key = "c3bc005d1a70992b2b3f3ef97d896c32"
fred <- FredR(api.key)
str(fred,1)
test <- fred$series.search
test
test(text = "total", search_type = "series_id", order_by = "series_id")
gdp.series <- fred$series.search(text = "gdp")
library(FredR)
gdp.series <- fred$series.search(text = "gdp")
api.key = "c3bc005d1a70992b2b3f3ef97d896c32"
fred <- FredR(api.key)
gdp.series <- fred$series.search(text = "gdp")
library(FredR)
api.key = "c3bc005d1a70992b2b3f3ef97d896c32"
fred <- FredR(api.key)
str(fred,1)
gdp.series <- fred$series.search(text = "gdp")
